func minPathSum(grid [][]int) int {
    row, column := len(grid), len(grid[0])
    //到grid[i][j]的最小路径和
    dp := make([][]int, row)
    for i := range dp {
        dp[i] = make([]int, column)
    }
    dp[0][0] = grid[0][0]
    for i := 1; i < row; i++ {
        dp[i][0] = dp[i-1][0] + grid[i][0]
    }
    for j := 1; j < column; j++ {
        dp[0][j] = dp[0][j-1] + grid[0][j]
    }
    for i := 1; i < row; i++ {
        for j := 1; j < column; j++ {
            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + grid[i][j]
        }
    }
    return dp[row-1][column-1]
}