func minDistance(word1 string, word2 string) int {
    length1, length2 := len(word1), len(word2)
    //dp[i][j]:word1的子序列(以word1[i-1]为结尾) 与 word2的子序列(以word2[j-1]为结尾)
    //的 编辑距离
    dp := make([][]int, length1 + 1)
    for i := range dp {
        dp[i] = make([]int, length2 + 1)
    }
    for i := 0; i <= length1; i++ {
        dp[i][0] = i
    }
    for j := 0; j <= length2; j++ {
        dp[0][j] = j
    }
    for i := 1; i <= length1; i++ {
        for j := 1; j <= length2; j++ {
            if word1[i-1] == word2[j-1] {
                dp[i][j] = dp[i-1][j-1]
            } else {
                dp[i][j] = min(min(dp[i-1][j] + 1, dp[i][j-1] + 1), dp[i-1][j-1] + 1)
            }
        }
    }
    return dp[length1][length2]
}