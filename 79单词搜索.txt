func exist(board [][]byte, word string) bool {
    direcition := [][]int{{1, 0}, {0, 1}, {-1, 0}, {0, -1}}
    visited := make([][]bool, len(board))
    for i := range visited {
        visited[i] = make([]bool, len(board[0]))
    }
    var dfs func(i, j, index int) bool
    dfs = func(x, y, index int) bool {
        if x < 0 || x >= len(board) || y < 0 || y >= len(board[0]) {
            return false
        }
        if board[x][y] != word[index] || visited[x][y] == true {
            return false
        }
        if index == len(word) - 1 {
            return true
        }
        visited[x][y] = true
        for i := range direcition {
            nextx := x + direcition[i][0]
            nexty := y + direcition[i][1]
            if dfs(nextx, nexty, index + 1) {
                return true
            }
        }
        visited[x][y] = false
        return false
    }
    for i := 0; i < len(board); i++ {
        for j := 0; j < len(board[0]); j++ {
            if dfs(i, j, 0) {
                return true
            }
        }
    }
    return false
}