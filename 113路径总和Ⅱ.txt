/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func pathSum(root *TreeNode, targetSum int) [][]int {
    var ans [][]int
    var path []int
    var dfs func(cur *TreeNode, curSum int)
    dfs = func(cur *TreeNode, curSum int) {
        if cur == nil {
            return
        }
        curSum += cur.Val
        path = append(path, cur.Val)
        if cur.Left == nil && cur.Right == nil {
            if curSum == targetSum {
                temp := append([]int{}, path...)
                ans = append(ans, temp)
            }
        }
        dfs(cur.Left, curSum)
        dfs(cur.Right, curSum)
        curSum -= cur.Val
        path = path[:len(path)-1]
    }
    dfs(root, 0)
    return ans
}