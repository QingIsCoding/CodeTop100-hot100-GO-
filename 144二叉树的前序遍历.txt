/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
/*func preorderTraversal(root *TreeNode) []int {
    var ans []int
    var preorder func(cur *TreeNode)
    preorder = func(cur *TreeNode) {
        if cur == nil {
            return
        }
        ans = append(ans, cur.Val)
        preorder(cur.Left)
        preorder(cur.Right)
    }
    preorder(root)
    return ans
}*/
func preorderTraversal(root *TreeNode) []int {
    var ans []int
    if root == nil {
        return ans
    }
    stack := []*TreeNode{root}
    for len(stack) > 0 {
        cur := stack[len(stack)-1]
        stack = stack[:len(stack)-1]
        ans = append(ans, cur.Val)
        if cur.Right != nil {
            stack = append(stack, cur.Right)
        }
        if cur.Left != nil {
            stack = append(stack, cur.Left)
        }
    }
    return ans
}