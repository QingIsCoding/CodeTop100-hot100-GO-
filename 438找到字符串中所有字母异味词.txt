func findAnagrams(s string, p string) []int {
    var ans []int
    length_s, length_p := len(s), len(p)
    if length_s < length_p {
        return ans
    }
    //s中的字母x出现次数比p中的字母x出现次数多count[x-'a']次
    count := make([]int, 26)
    for i := 0; i < length_p; i++ {
        count[s[i]-'a']++
        count[p[i]-'a']--
    }
    //s中的字母种类比p中的字母种类多differ次
    var differ int
    for i := range count {
        if count[i] != 0 {
            differ++
        }
    }
    if differ == 0 {
        ans = append(ans, 0)
    }
    for i := 0; i < length_s - length_p; i++ {
        //1->0:不相同变相同
        if count[s[i]-'a'] == 1 {
            differ--
        //0->-1:相同变不相同
        } else if count[s[i]-'a'] == 0 {
            differ++
        }
        count[s[i]-'a']--
        //-1->0:不相同变相同
        if count[s[i+length_p]-'a'] == -1 {
            differ--
        //0->1:相同变不相同
        } else if count[s[i+length_p]-'a'] == 0 {
            differ++
        }
        count[s[i+length_p]-'a']++
        if differ == 0 {
            ans = append(ans, i + 1)
        }
    }
    return ans
}