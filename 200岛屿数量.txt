func numIslands(grid [][]byte) int {
    ans := 0
    direction := [][]int{{1, 0}, {0, 1}, {-1, 0}, {0, -1}}
    visited := make([][]bool, len(grid))
    for i := range visited {
        visited[i] = make([]bool, len(grid[0]))
    }
    var dfs func(x, y int)
    dfs = func(x, y int) {
        if x < 0 || x >= len(grid) || y < 0 || y >= len(grid[0]) {
            return
        }
        if grid[x][y] == '0' || visited[x][y] == true {
            return
        }
        visited[x][y] = true
        for i := range direction {
            nextx := x + direction[i][0]
            nexty := y + direction[i][1]    
            dfs(nextx, nexty)
        }
    }
    for i := range grid {
        //for j := range grid[i] {
        for j := range grid[0] {
            if grid[i][j] == '1' && visited[i][j] == false {
                dfs(i, j)
                ans++
            }
        }
    }
    return ans
}